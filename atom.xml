<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

 <title>Gray - Single column blog and portfolio Jekyll theme</title>
 <link href="/atom.xml" rel="self"/>
 <link href="/"/>
 <updated>2020-01-04T23:33:46-05:00</updated>
 <id></id>
 <author>
   <name></name>
   <email></email>
 </author>

 
 <entry>
   <title>7 sorting algorithms</title>
   <link href="/2020/01/04/7-sorting-algo"/>
   <updated>2020-01-04T00:00:00-05:00</updated>
   <id>/2020/01/04/7-sorting-algo</id>
   <content type="html">&lt;p&gt;Here are 7 sorting algorithms implementations in Go that we are going to cover in this post:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Bubble Sort&lt;/li&gt;
  &lt;li&gt;Selection Sort&lt;/li&gt;
  &lt;li&gt;Insertion Sort&lt;/li&gt;
  &lt;li&gt;Merge Sort&lt;/li&gt;
  &lt;li&gt;Quicksort&lt;/li&gt;
  &lt;li&gt;Heapsort&lt;/li&gt;
  &lt;li&gt;Counting Sort&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;bubble-sort&quot;&gt;Bubble Sort&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Approach:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Repeatedly swap the adjacent elements if they are in the wrong order in the
array, one item at a time.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Solution:&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-go highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bubbleSort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

	&lt;span class=&quot;c&quot;&gt;// for each element in the list, check it with almost every other element.&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;c&quot;&gt;// since the last i element is already in place, only iterate through&lt;/span&gt;
		&lt;span class=&quot;c&quot;&gt;// the item before the last one.&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;c&quot;&gt;// swap the adjacent elements if they are not in ascending order.&lt;/span&gt;
			&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
				&lt;span class=&quot;n&quot;&gt;common&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Swap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
			&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;selection-sort&quot;&gt;Selection Sort&lt;/h3&gt;

&lt;p&gt;TODO&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Scalable Press</title>
   <link href="/2020/01/02/scalable-press"/>
   <updated>2020-01-02T00:00:00-05:00</updated>
   <id>/2020/01/02/scalable-press</id>
   <content type="html">&lt;h3 id=&quot;what-is-the-product&quot;&gt;What is the product?&lt;/h3&gt;

&lt;p&gt;Efficient custom printing on demand.&lt;/p&gt;

&lt;h3 id=&quot;what-is-its-current-revenue-monthly-yearly&quot;&gt;What is its current revenue (monthly, yearly)?&lt;/h3&gt;

&lt;p&gt;100 millions a year.&lt;/p&gt;

&lt;h3 id=&quot;what-is-the-business-model&quot;&gt;What is the business model?&lt;/h3&gt;

&lt;p&gt;Subscription.&lt;/p&gt;

&lt;h3 id=&quot;how-did-the-founder-come-up-with-their-idea-what-was-the-context&quot;&gt;How did the founder come up with their idea? What was the context?&lt;/h3&gt;

&lt;p&gt;Had a friend, Raymond, working in the time T shirt business, Teespring, was booming. He also dropped out the same time, but because he had made 1 millions in revenue selling T shirts. Utilized cheap manufacturing, sold at 40% cheaper prices, were price leaders. Eric joined to build their own printing infrastructure to a even more automated, cheaper, efficient process.&lt;/p&gt;

&lt;p&gt;Built the API first and posted in Hackernews. Went after T shirt business, found Teechip, competed with Teespring (YC). Expanded to other industry too based on the API.&lt;/p&gt;

&lt;h3 id=&quot;how-did-they-find-the-right-problems-to-work-on&quot;&gt;How did they find the right problems to work on?&lt;/h3&gt;

&lt;p&gt;TODO&lt;/p&gt;

&lt;h3 id=&quot;how-did-they-achieve-productmarket-fit&quot;&gt;How did they achieve product/market fit?&lt;/h3&gt;

&lt;p&gt;TODO&lt;/p&gt;

&lt;h3 id=&quot;how-did-they-get-their-first-paying-customers&quot;&gt;How did they get their first paying customers?&lt;/h3&gt;

&lt;p&gt;TODO&lt;/p&gt;
</content>
 </entry>
 

</feed>
