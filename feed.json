{
    "version": "https://jsonfeed.org/version/1",
    "title": "Gray - Single column blog and portfolio Jekyll theme",
    "home_page_url": "/",
    "feed_url": "/feed.json",
    "description": "Gray - Single column blog and portfolio Jekyll theme",
    "icon": "/apple-touch-icon.png",
    "favicon": "/favicon.ico",
    "expired": false,
    
    "author": "{"name"=>nil, "email"=>nil, "url"=>nil, "avatar"=>nil}",
    
"items": [
    
        {
            "id": "/2020/01/04/7-sorting-algo",
            "title": "7 sorting algorithms",
            "summary": null,
            "content_text": "Here are 7 sorting algorithms implementations in Go that we are going to cover in this post:  Bubble Sort  Selection Sort  Insertion Sort  Merge Sort  Quicksort  Heapsort  Counting SortBubble SortApproach:Repeatedly swap the adjacent elements if they are in the wrong order in thearray, one item at a time.Solution:func bubbleSort(in []int) {\tlength := len(in)\t// for each element in the list, check it with almost every other element.\tfor i := 0; i &lt; length; i++ {\t\t// since the last i element is already in place, only iterate through\t\t// the item before the last one.\t\tfor j := 0; j &lt; length-i-1; j++ {\t\t\t// swap the adjacent elements if they are not in ascending order.\t\t\tif in[j] &gt; in[j+1] {\t\t\t\tcommon.Swap(in, j, j+1)\t\t\t}\t\t}\t}}Selection SortTODO",
            "content_html": "<p>Here are 7 sorting algorithms implementations in Go that we are going to cover in this post:</p><ol>  <li>Bubble Sort</li>  <li>Selection Sort</li>  <li>Insertion Sort</li>  <li>Merge Sort</li>  <li>Quicksort</li>  <li>Heapsort</li>  <li>Counting Sort</li></ol><h3 id=\"bubble-sort\">Bubble Sort</h3><p><strong>Approach:</strong></p><p>Repeatedly swap the adjacent elements if they are in the wrong order in thearray, one item at a time.</p><p><strong>Solution:</strong></p><div class=\"language-go highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">func</span> <span class=\"n\">bubbleSort</span><span class=\"p\">(</span><span class=\"n\">in</span> <span class=\"p\">[]</span><span class=\"kt\">int</span><span class=\"p\">)</span> <span class=\"p\">{</span>\t<span class=\"n\">length</span> <span class=\"o\">:=</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">in</span><span class=\"p\">)</span>\t<span class=\"c\">// for each element in the list, check it with almost every other element.</span>\t<span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"o\">:=</span> <span class=\"m\">0</span><span class=\"p\">;</span> <span class=\"n\">i</span> <span class=\"o\">&lt;</span> <span class=\"n\">length</span><span class=\"p\">;</span> <span class=\"n\">i</span><span class=\"o\">++</span> <span class=\"p\">{</span>\t\t<span class=\"c\">// since the last i element is already in place, only iterate through</span>\t\t<span class=\"c\">// the item before the last one.</span>\t\t<span class=\"k\">for</span> <span class=\"n\">j</span> <span class=\"o\">:=</span> <span class=\"m\">0</span><span class=\"p\">;</span> <span class=\"n\">j</span> <span class=\"o\">&lt;</span> <span class=\"n\">length</span><span class=\"o\">-</span><span class=\"n\">i</span><span class=\"o\">-</span><span class=\"m\">1</span><span class=\"p\">;</span> <span class=\"n\">j</span><span class=\"o\">++</span> <span class=\"p\">{</span>\t\t\t<span class=\"c\">// swap the adjacent elements if they are not in ascending order.</span>\t\t\t<span class=\"k\">if</span> <span class=\"n\">in</span><span class=\"p\">[</span><span class=\"n\">j</span><span class=\"p\">]</span> <span class=\"o\">&gt;</span> <span class=\"n\">in</span><span class=\"p\">[</span><span class=\"n\">j</span><span class=\"o\">+</span><span class=\"m\">1</span><span class=\"p\">]</span> <span class=\"p\">{</span>\t\t\t\t<span class=\"n\">common</span><span class=\"o\">.</span><span class=\"n\">Swap</span><span class=\"p\">(</span><span class=\"n\">in</span><span class=\"p\">,</span> <span class=\"n\">j</span><span class=\"p\">,</span> <span class=\"n\">j</span><span class=\"o\">+</span><span class=\"m\">1</span><span class=\"p\">)</span>\t\t\t<span class=\"p\">}</span>\t\t<span class=\"p\">}</span>\t<span class=\"p\">}</span><span class=\"p\">}</span></code></pre></div></div><h3 id=\"selection-sort\">Selection Sort</h3><p>TODO</p>",
            "url": "/2020/01/04/7-sorting-algo",
            
            
            
            "tags": ["algorithm","sorting"],
            
            "date_published": "2020-01-04T00:00:00-05:00",
            "date_modified": "2020-01-04T00:00:00-05:00",
            
                "author": 
                "{"name"=>nil, "email"=>nil, "url"=>nil, "avatar"=>nil}"
                
            
        },
    
        {
            "id": "/2020/01/02/scalable-press",
            "title": "Scalable Press",
            "summary": null,
            "content_text": "What is the product?Efficient custom printing on demand.What is its current revenue (monthly, yearly)?100 millions a year.What is the business model?Subscription.How did the founder come up with their idea? What was the context?Had a friend, Raymond, working in the time T shirt business, Teespring, was booming. He also dropped out the same time, but because he had made 1 millions in revenue selling T shirts. Utilized cheap manufacturing, sold at 40% cheaper prices, were price leaders. Eric joined to build their own printing infrastructure to a even more automated, cheaper, efficient process.Built the API first and posted in Hackernews. Went after T shirt business, found Teechip, competed with Teespring (YC). Expanded to other industry too based on the API.How did they find the right problems to work on?TODOHow did they achieve product/market fit?TODOHow did they get their first paying customers?TODO",
            "content_html": "<h3 id=\"what-is-the-product\">What is the product?</h3><p>Efficient custom printing on demand.</p><h3 id=\"what-is-its-current-revenue-monthly-yearly\">What is its current revenue (monthly, yearly)?</h3><p>100 millions a year.</p><h3 id=\"what-is-the-business-model\">What is the business model?</h3><p>Subscription.</p><h3 id=\"how-did-the-founder-come-up-with-their-idea-what-was-the-context\">How did the founder come up with their idea? What was the context?</h3><p>Had a friend, Raymond, working in the time T shirt business, Teespring, was booming. He also dropped out the same time, but because he had made 1 millions in revenue selling T shirts. Utilized cheap manufacturing, sold at 40% cheaper prices, were price leaders. Eric joined to build their own printing infrastructure to a even more automated, cheaper, efficient process.</p><p>Built the API first and posted in Hackernews. Went after T shirt business, found Teechip, competed with Teespring (YC). Expanded to other industry too based on the API.</p><h3 id=\"how-did-they-find-the-right-problems-to-work-on\">How did they find the right problems to work on?</h3><p>TODO</p><h3 id=\"how-did-they-achieve-productmarket-fit\">How did they achieve product/market fit?</h3><p>TODO</p><h3 id=\"how-did-they-get-their-first-paying-customers\">How did they get their first paying customers?</h3><p>TODO</p>",
            "url": "/2020/01/02/scalable-press",
            
            
            
            
            
            "date_published": "2020-01-02T00:00:00-05:00",
            "date_modified": "2020-01-02T00:00:00-05:00",
            
                "author": 
                "{"name"=>nil, "email"=>nil, "url"=>nil, "avatar"=>nil}"
                
            
        }
    
    ]
}